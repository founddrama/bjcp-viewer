{"version":3,"sources":["bjcp/bjcp-formatters.tsx","components/StyleRow.tsx","components/StyleList.tsx","components/StyleDetail.tsx","components/StyleGuideApp.tsx","index.tsx"],"names":["formatSG","sg","toFixed","formatRange","rangeInput","opts","low","high","formatter","prefix","suffix","StyleRow","this","props","style","isSelected","onClick","stats","abv","ibu","og","fg","srm","className","name","React","Component","StyleList","getSelected","styleId","onRowClick","_id","emitSelectedStyle","renderRow","key","colSpan","styles","map","StyleDetail","renderStatTable","isMead","isBeer","generateColorBand","renderTags","tags","t","replace","join","range","i","Math","floor","push","display","height","data-testid","backgroundColor","flexGrow","element","ReactDOM","findDOMNode","scrollTop","content","title","id","toLowerCase","onCloseClick","renderSection","impression","aroma","appearance","flavor","mouthfeel","comments","history","ingredients","comparison","examples","entry_instructions","StyleGuideApp","useState","selectedStyle","setSelectedStyle","locationKeys","setLocationKeys","findStyleById","useCallback","find","setSelectedStyleById","setSelectedStyleFromPath","pathname","location","useLocation","useHistory","useEffect","listen","action","keys","undefined","require","render","document","getElementById"],"mappings":"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","file":"static/js/main.87a63e36.chunk.js","sourcesContent":["import React from 'react';\n\ntype RangeValue = number | string | undefined;\n\ntype RangeInput = {\n  low?: RangeValue;\n  high?: RangeValue;\n};\n\ninterface RangeOptions {\n  prefix?: string;\n  suffix?: string;\n  formatter?: (input: RangeValue) => string | undefined;\n};\n\nexport function formatSG(sg: RangeValue): string | undefined {\n  if(!sg) return;\n  if (typeof sg === 'number') {\n    return sg.toFixed(3);\n  } else {\n    return sg;\n  }\n}\n\nexport function formatRange(rangeInput: RangeInput, opts: RangeOptions = {}): JSX.Element {\n  let { low, high } = rangeInput;\n\n  if (opts.formatter) {\n    low = opts.formatter(low);\n    high = opts.formatter(high);\n  }\n\n  if (!low || !high) {\n    return <td><em>varies</em></td>;\n  } else {\n    return (\n      <td>{opts.prefix ? opts.prefix : ''}{low}-{high}{opts.suffix ? opts.suffix : ''}</td>\n    );\n  }\n}\n","import React from 'react';\nimport { BJCPStyle } from '../types';\nimport { formatRange, formatSG } from '../bjcp/bjcp-formatters';\n\ntype StyleRowProps = {\n  isSelected: boolean;\n  onClick: React.MouseEventHandler<HTMLTableRowElement>;\n  style: BJCPStyle;\n};\n\nclass StyleRow extends React.Component<StyleRowProps> {\n  render(): JSX.Element {\n    const { style, isSelected, onClick } = this.props;\n    const { abv, ibu, og, fg, srm } = style.stats;\n\n    return (\n      <tr onClick={onClick} className={isSelected ? 'is-selected' : ''}>\n        <td>{style['@_id']}.</td>\n        <td>{style.name}</td>\n        {formatRange(abv, { suffix:'%' })}\n        {formatRange(ibu)}\n        {formatRange(og, { formatter: formatSG })}\n        {formatRange(fg, { formatter: formatSG })}\n        {formatRange(srm)}\n      </tr>\n    );\n  }\n}\n\nexport default StyleRow;\n","import React from 'react';\nimport StyleRow from './StyleRow';\nimport { BJCPStyle } from '../types';\n\ntype StyleListProps = {\n  emitSelectedStyle: Function;\n  styles: BJCPStyle[];\n  style?: BJCPStyle;\n};\n\nclass StyleList extends React.Component<StyleListProps> {\n  getSelected = (styleId: string): boolean => styleId === this.props.style?.['@_id'];\n\n  onRowClick = (_id: string): void => {\n    this.props.emitSelectedStyle(_id);\n  };\n\n  renderRow = (style: BJCPStyle): JSX.Element => {\n    const _id = style['@_id'];\n    return (\n      <StyleRow\n        key={_id}\n        style={style}\n        isSelected={this.getSelected(_id)}\n        onClick={() => this.onRowClick(_id)}\n      />\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"style-list-container\">\n        <table>\n          <thead>\n            <tr>\n              <th colSpan={2}>Style</th>\n              <th>ABV</th>\n              <th>IBU</th>\n              <th>O.G.</th>\n              <th>F.G.</th>\n              <th>SRM</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.styles.map(this.renderRow)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default StyleList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StyleStatRange, BJCPBeerTags, BJCPStyle } from '../types';\nimport { formatSG, formatRange } from '../bjcp/bjcp-formatters';\n\ntype StyleDetailProps = {\n  style: BJCPStyle | undefined;\n  onCloseClick: React.MouseEventHandler<HTMLTableRowElement>;\n};\n\nclass StyleDetail extends React.Component<StyleDetailProps> {\n  isBeer(style: BJCPStyle): boolean {\n    return style['@_type'] === 'beer';\n  }\n\n  isMead(style: BJCPStyle): boolean {\n    return style['@_type'] === 'mead';\n  }\n\n  isCider(style: BJCPStyle): boolean {\n    return style['@_type'] === 'cider';\n  }\n\n  generateColorBand(srm: StyleStatRange): JSX.Element {\n    let range = [];\n    const { low, high } = srm;\n    for (let i = Math.floor(low || 1); i < (high ? high + 1 : 40); i++) {\n      range.push(i);\n    }\n\n    const ctStyle = {\n      display: 'flex',\n      height: '1.5rem'\n    };\n\n    return (\n      <div style={ctStyle} data-testid=\"srm-gradient\">\n      {\n        range.map((i) => (\n          <div key={i} style={{\n            backgroundColor: `var(--srm_${i})`,\n            flexGrow: 1,\n          }}></div>\n        ))\n      }\n      </div>\n    );\n  }\n\n  componentDidUpdate (): void {\n    const element = ReactDOM.findDOMNode(this);\n    if (element != null) {\n      (element as HTMLElement).scrollTop = 0;\n    }\n  }\n\n  renderSection(content: string | undefined, title: string): JSX.Element | undefined {\n    if(!content) return;\n\n    return (\n      <div>\n        <h3 id={title.toLowerCase().replace(/\\s/g, '-')}>{title}</h3>\n        <p>{content}</p>\n      </div>\n    );\n  }\n\n  renderStatTable = (style: BJCPStyle): JSX.Element | null => {\n    if (this.isMead(style)) {\n      return null;\n    }\n\n    const { abv, ibu, og, fg, srm } = style.stats;\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>ABV</th>\n            {this.isBeer(style) ? <th>IBU</th> : null}\n            <th>O.G.</th>\n            <th>F.G.</th>\n            {this.isBeer(style) ? <th>SRM</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {formatRange(abv, { suffix: '%' })}\n            {this.isBeer(style) ? formatRange(ibu) : null}\n            {formatRange(og, { formatter: formatSG })}\n            {formatRange(fg, { formatter: formatSG })}\n            {this.isBeer(style) ? formatRange(srm) : null}\n          </tr>\n          { this.isBeer(style) ?\n            <tr>\n              <td colSpan={5} className=\"srm-gradient\">\n                {this.generateColorBand(srm)}\n              </td>\n            </tr>\n          : null }\n        </tbody>\n      </table>\n    );\n  }\n\n  renderTags = (tags: BJCPBeerTags[] | undefined) => tags?.map((t) => `#${t.replace('-', '\\u2011')}`).join(' ');\n\n  render(): JSX.Element | null {\n    const { style, onCloseClick } = this.props;\n    if(!style) return null;\n\n    return (\n      <article>\n        <span className=\"close-icon\" onClick={onCloseClick}>&times;</span>\n        <h2>{style['@_id']}. {style.name}</h2>\n        {this.renderStatTable(style)}\n        {this.renderSection(style.impression, 'Overall Impression')}\n        {this.renderSection(style.aroma, 'Aroma')}\n        {this.renderSection(style.appearance, 'Appearance')}\n        {this.renderSection(style.flavor, 'Flavor')}\n        {this.renderSection(style.mouthfeel, 'Mouthfeel')}\n        {this.renderSection(style.comments, 'Comments')}\n        {this.renderSection(style.history, 'History')}\n        {this.renderSection(style.ingredients, 'Ingredients')}\n        {this.renderSection(style.comparison, 'Comparison')}\n        {this.renderSection(style.examples, 'Examples')}\n        {this.renderSection(style.entry_instructions, 'Entry Instructions')}\n        {this.renderSection(this.renderTags(style.tags), 'Tags')}\n      </article>\n    );\n  }\n}\n\nexport default StyleDetail;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport StyleList from './StyleList';\nimport StyleDetail from './StyleDetail';\nimport { BJCPStyle } from '../types';\n\ntype StyleGuideProps = {\n  styles: BJCPStyle[];\n};\n\nexport default function StyleGuideApp(props: StyleGuideProps) {\n  const [ selectedStyle, setSelectedStyle ] = useState<BJCPStyle | undefined>();\n  const [ locationKeys, setLocationKeys ] = useState<(string | undefined)[]>([]);\n\n  const findStyleById = useCallback((styleId: string): BJCPStyle | undefined => (\n    props.styles.find((style) => style['@_id'] === styleId)\n  ), [props]);\n\n  const setSelectedStyleById = useCallback((styleId: string): void => {\n    setSelectedStyle(findStyleById(styleId));\n  }, [findStyleById]);\n\n  const setSelectedStyleFromPath = useCallback((pathname: string): void => {\n    const styleId = pathname.replace(/^\\//, '');\n    setSelectedStyleById(styleId);\n  }, [setSelectedStyleById]);\n\n  const handleStyleChange = (styleId: string): void => {\n    setSelectedStyleById(styleId);\n    history.push(`/${styleId}`);\n  };\n\n  const onCloseClick = (): void => {\n    setSelectedStyle(undefined);\n    history.push(`/`);\n  };\n\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === 'PUSH') {\n        setLocationKeys([location.key]);\n      }\n  \n      if (history.action === 'POP') {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys ]) => keys);\n        } else {\n          setLocationKeys((keys) => [location.key, ...keys]);\n        }\n        setSelectedStyleFromPath(location.pathname);\n      }\n    });\n  }, [history, locationKeys, setSelectedStyleFromPath]);\n\n  const { pathname } = location;\n  if (!selectedStyle && pathname !== '/') {\n    setSelectedStyleFromPath(pathname);\n  }\n\n  return (\n    <main>\n      <h1>2015 BJCP Style Guide</h1>\n      <StyleList styles={props.styles} style={selectedStyle} emitSelectedStyle={handleStyleChange} />\n      <StyleDetail style={selectedStyle} onCloseClick={onCloseClick} />\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport StyleGuideApp from './components/StyleGuideApp';\nimport './css/bjcp.css';\n\nconst styles = require('./bjcp/2015-bjcp-styleguide-flattened.json');\n\nReactDOM.render(\n  <Router>\n    <StyleGuideApp styles={styles} />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}