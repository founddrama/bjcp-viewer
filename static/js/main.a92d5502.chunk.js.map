{"version":3,"sources":["bjcp/bjcp-formatters.tsx","components/StyleRow.tsx","components/StyleList.tsx","ts/cyrb53-hash.ts","components/StyleDetail.tsx","components/StyleGuideApp.tsx","index.tsx"],"names":["formatSG","sg","toFixed","formatRange","rangeInput","opts","low","high","formatter","prefix","suffix","StyleRow","this","props","style","isSelected","onClick","stats","abv","ibu","og","fg","srm","className","name","React","PureComponent","StyleList","getSelected","styleId","onRowClick","_id","emitSelectedStyle","renderRow","key","colSpan","styles","map","cyrb53","str","ch","seed","h1","h2","i","length","charCodeAt","Math","imul","StyleDetail","renderStatTable","isMead","notes","isBeer","generateColorBand","renderStatsNotes","renderTags","tags","t","replace","join","range","floor","push","display","height","data-testid","backgroundColor","flexGrow","element","ReactDOM","findDOMNode","scrollTop","content","split","p","trim","renderParagraphs","title","id","toLowerCase","onCloseClick","renderPreamble","preamble","renderSection","impression","aroma","appearance","flavor","mouthfeel","comments","history","ingredients","comparison","examples","entry_instructions","StyleGuideApp","memo","location","useLocation","useHistory","findStyleById","useCallback","find","setSelectedStyleById","setSelectedStyle","setSelectedStyleFromPath","pathname","initStyle","getSelectedStyleFromPath","useState","selectedStyle","locationPaths","setLocationPaths","useEffect","listen","action","keys","undefined","require","$root","document","getElementById","Boolean","process","render","basename"],"mappings":"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","file":"static/js/main.a92d5502.chunk.js","sourcesContent":["import React from 'react';\n\ntype RangeValue = number | string | undefined;\n\ntype RangeInput = {\n  low?: RangeValue;\n  high?: RangeValue;\n};\n\ninterface RangeOptions {\n  prefix?: string;\n  suffix?: string;\n  formatter?: (input: RangeValue) => string | undefined;\n};\n\nexport function formatSG(sg: RangeValue): string | undefined {\n  if(!sg) return;\n  if (typeof sg === 'number') {\n    return sg.toFixed(3);\n  } else {\n    return sg;\n  }\n}\n\nexport function formatRange(rangeInput: RangeInput, opts: RangeOptions = {}): JSX.Element {\n  let { low, high } = rangeInput;\n\n  if (opts.formatter) {\n    low = opts.formatter(low);\n    high = opts.formatter(high);\n  }\n\n  if (!low || !high) {\n    return <td><em>varies</em></td>;\n  } else {\n    return (\n      <td>{opts.prefix ? opts.prefix : ''}{low}-{high}{opts.suffix ? opts.suffix : ''}</td>\n    );\n  }\n}\n","import React from 'react';\nimport { BJCPStyle } from '../types';\nimport { formatRange, formatSG } from '../bjcp/bjcp-formatters';\n\ntype StyleRowProps = {\n  isSelected: boolean;\n  onClick: React.MouseEventHandler<HTMLTableRowElement>;\n  style: BJCPStyle;\n};\n\nclass StyleRow extends React.PureComponent<StyleRowProps> {\n  render(): JSX.Element {\n    const { style, isSelected, onClick } = this.props;\n    const { abv, ibu, og, fg, srm } = style.stats;\n\n    return (\n      <tr onClick={onClick} className={isSelected ? 'is-selected' : ''}>\n        <td>{style['@_id']}.</td>\n        <td>{style.name}</td>\n        {formatRange(abv, { suffix:'%' })}\n        {formatRange(ibu)}\n        {formatRange(og, { formatter: formatSG })}\n        {formatRange(fg, { formatter: formatSG })}\n        {formatRange(srm)}\n      </tr>\n    );\n  }\n}\n\nexport default StyleRow;\n","import React from 'react';\nimport StyleRow from './StyleRow';\nimport { BJCPStyle } from '../types';\n\ntype StyleListProps = {\n  emitSelectedStyle: Function;\n  styles: BJCPStyle[];\n  style?: BJCPStyle;\n};\n\nclass StyleList extends React.PureComponent<StyleListProps> {\n  getSelected = (styleId: string): boolean => styleId === this.props.style?.['@_id'];\n\n  onRowClick = (_id: string): void => {\n    this.props.emitSelectedStyle(_id);\n  };\n\n  renderRow = (style: BJCPStyle): JSX.Element => {\n    const _id = style['@_id'];\n    return (\n      <StyleRow\n        key={_id}\n        style={style}\n        isSelected={this.getSelected(_id)}\n        onClick={() => this.onRowClick(_id)}\n      />\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"style-list-container\">\n        <table>\n          <thead>\n            <tr>\n              <th colSpan={2}>Style</th>\n              <th>ABV</th>\n              <th>IBU</th>\n              <th>O.G.</th>\n              <th>F.G.</th>\n              <th>SRM</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.styles.map(this.renderRow)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default StyleList;\n","// source: https://stackoverflow.com/a/52171480/623654\n\nexport default function cyrb53(str: string, seed: number = 0): number {\n  let h1 = 0xdeadbeef ^ seed;\n  let h2 = 0x41c6ce57 ^ seed;\n\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1 = Math.imul(h1 ^ (h1>>>16), 2246822507) ^ Math.imul(h2 ^ (h2>>>13), 3266489909);\n  h2 = Math.imul(h2 ^ (h2>>>16), 2246822507) ^ Math.imul(h1 ^ (h1>>>13), 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1>>>0);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StyleStatRange, BJCPBeerTags, BJCPStyle } from '../types';\nimport { formatSG, formatRange } from '../bjcp/bjcp-formatters';\nimport cyrb53 from '../ts/cyrb53-hash';\n\ntype StyleDetailProps = {\n  style: BJCPStyle | undefined;\n  onCloseClick: React.MouseEventHandler<HTMLTableRowElement>;\n};\n\nclass StyleDetail extends React.PureComponent<StyleDetailProps> {\n  isBeer(style: BJCPStyle): boolean {\n    return style['@_type'] === 'beer';\n  }\n\n  isMead(style: BJCPStyle): boolean {\n    return style['@_type'] === 'mead';\n  }\n\n  isCider(style: BJCPStyle): boolean {\n    return style['@_type'] === 'cider';\n  }\n\n  generateColorBand(srm: StyleStatRange): JSX.Element {\n    let range = [];\n    const { low, high } = srm;\n    for (let i = Math.floor(low || 1); i < (high ? high + 1 : 40); i++) {\n      range.push(i);\n    }\n\n    const ctStyle = {\n      display: 'flex',\n      height: '1.5rem'\n    };\n\n    return (\n      <div style={ctStyle} data-testid=\"srm-gradient\">\n      {\n        range.map((i) => (\n          <div key={i} style={{\n            backgroundColor: `var(--srm_${i})`,\n            flexGrow: 1,\n          }}></div>\n        ))\n      }\n      </div>\n    );\n  }\n\n  componentDidUpdate (): void {\n    const element = ReactDOM.findDOMNode(this);\n    if (element != null) {\n      (element as HTMLElement).scrollTop = 0;\n    }\n  }\n\n  private renderParagraphs(content: string): JSX.Element {\n    return (\n      <>\n        {content.split('\\n').map(p => (\n          <p key={cyrb53(p, p.length)}>{p.trim()}</p>\n        ))}\n      </>\n    );\n  }\n\n  renderPreamble(content: string | undefined): JSX.Element | undefined {\n    if(!content) return;\n\n    return (\n      <div className=\"preamble\" data-testid=\"style-preamble\">\n        {this.renderParagraphs(content)}\n      </div>\n    );\n  }\n\n  renderSection(content: string | undefined, title: string): JSX.Element | undefined {\n    if(!content) return;\n\n    return (\n      <div>\n        <h3 id={title.toLowerCase().replace(/\\s/g, '-')}>{title}</h3>\n        {this.renderParagraphs(content)}\n      </div>\n    );\n  }\n\n  renderStatsNotes(notes: string | undefined): JSX.Element | undefined {\n    if(!notes) return;\n\n    return (\n      <div className=\"stats-notes\" data-testid=\"style-stats-notes\">\n        {this.renderParagraphs(notes)}\n      </div>\n    );\n  }\n\n  renderStatTable = (style: BJCPStyle): JSX.Element | null => {\n    if (this.isMead(style)) {\n      return null;\n    }\n\n    const { abv, ibu, og, fg, srm, notes } = style.stats;\n\n    return (\n      <>\n        <table>\n          <thead>\n            <tr>\n              <th>ABV</th>\n              {this.isBeer(style) ? <th>IBU</th> : null}\n              <th>O.G.</th>\n              <th>F.G.</th>\n              {this.isBeer(style) ? <th>SRM</th> : null}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {formatRange(abv, { suffix: '%' })}\n              {this.isBeer(style) ? formatRange(ibu) : null}\n              {formatRange(og, { formatter: formatSG })}\n              {formatRange(fg, { formatter: formatSG })}\n              {this.isBeer(style) ? formatRange(srm) : null}\n            </tr>\n            { this.isBeer(style) ?\n              <tr>\n                <td colSpan={5} className=\"srm-gradient\">\n                  {this.generateColorBand(srm)}\n                </td>\n              </tr>\n            : null }\n          </tbody>\n        </table>\n        {this.renderStatsNotes(notes)}\n      </>\n    );\n  }\n\n  renderTags = (tags: BJCPBeerTags[] | undefined) => tags?.map((t) => `#${t.replace('-', '\\u2011')}`).join(' ');\n\n  render(): JSX.Element | null {\n    const { style, onCloseClick } = this.props;\n    if(!style) return null;\n\n    return (\n      <article>\n        <span className=\"close-icon\" onClick={onCloseClick}>&times;</span>\n        <h2>{style['@_id']}. {style.name}</h2>\n        {this.renderStatTable(style)}\n        {this.renderPreamble(style.preamble)}\n        {this.renderSection(style.impression, 'Overall Impression')}\n        {this.renderSection(style.aroma, 'Aroma')}\n        {this.renderSection(style.appearance, 'Appearance')}\n        {this.renderSection(style.flavor, 'Flavor')}\n        {this.renderSection(style.mouthfeel, 'Mouthfeel')}\n        {this.renderSection(style.comments, 'Comments')}\n        {this.renderSection(style.history, 'History')}\n        {this.renderSection(style.ingredients, 'Ingredients')}\n        {this.renderSection(style.comparison, 'Comparison')}\n        {this.renderSection(style.examples, 'Examples')}\n        {this.renderSection(style.entry_instructions, 'Entry Instructions')}\n        {this.renderSection(this.renderTags(style.tags), 'Tags')}\n      </article>\n    );\n  }\n}\n\nexport default StyleDetail;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport StyleList from './StyleList';\nimport StyleDetail from './StyleDetail';\nimport { BJCPStyle } from '../types';\n\ntype StyleGuideProps = {\n  styles: BJCPStyle[];\n};\n\nconst StyleGuideApp = React.memo(function StyleGuideApp(props: StyleGuideProps) {\n  const location = useLocation();\n  const history = useHistory();\n\n  const findStyleById = useCallback((styleId: string): BJCPStyle | undefined => (\n    props.styles.find((style) => style['@_id'] === styleId)\n  ), [props]);\n\n  const setSelectedStyleById = useCallback((styleId: string): void => {\n    setSelectedStyle(findStyleById(styleId));\n  }, [findStyleById]);\n\n  const getSelectedStyleFromPath = (pathname: string): BJCPStyle | undefined => {\n    const styleId = pathname.replace(/^\\//, '');\n    return findStyleById(styleId);\n  };\n\n  const setSelectedStyleFromPath = useCallback((pathname: string): void => {\n    const styleId = pathname.replace(/^\\//, '');\n    setSelectedStyleById(styleId);\n  }, [setSelectedStyleById]);\n\n  const { pathname } = location;\n  const initStyle = getSelectedStyleFromPath(pathname);\n\n  const [ selectedStyle, setSelectedStyle ] = useState<BJCPStyle | undefined>(initStyle);\n  const [ locationPaths, setLocationPaths ] = useState<(string | undefined)[]>([]);\n\n  const handleStyleChange = (styleId: string): void => {\n    setSelectedStyleById(styleId);\n    history.push(`/${styleId}`);\n  };\n\n  const onCloseClick = (): void => {\n    setSelectedStyle(undefined);\n    history.push(`/`);\n  };\n\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === 'PUSH') {\n        setLocationPaths([location.pathname]);\n      }\n  \n      if (history.action === 'POP') {\n        if (locationPaths[1] === location.pathname) {\n          setLocationPaths(([_, ...keys ]) => keys);\n        } else {\n          setLocationPaths((keys) => [location.pathname, ...keys]);\n        }\n        setSelectedStyleFromPath(location.pathname);\n      }\n    });\n  }, [history, locationPaths, setSelectedStyleFromPath]);\n\n  return (\n    <main>\n      <h1>2021 BJCP Style Guide</h1>\n      <StyleList styles={props.styles} style={selectedStyle} emitSelectedStyle={handleStyleChange} />\n      <StyleDetail style={selectedStyle} onCloseClick={onCloseClick} />\n    </main>\n  );\n});\n\nexport default StyleGuideApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport StyleGuideApp from './components/StyleGuideApp';\nimport './css/bjcp.css';\n\nconst styles = require('./bjcp/bjcp-styleguide-flattened.json');\nconst $root = document.getElementById('root');\n\nif (Boolean(process.env.REACT_APP_USE_HASH_ROUTER)) {\n  ReactDOM.render(\n    <HashRouter>\n      <StyleGuideApp styles={styles} />\n    </HashRouter>,\n    $root\n  );\n} else {\n  ReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <StyleGuideApp styles={styles} />\n    </BrowserRouter>,\n    $root\n  );\n}\n"],"sourceRoot":""}